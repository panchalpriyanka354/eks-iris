## working copy of buildspec.yaml

version: 0.2

phases:
  install:
    commands:
      - echo Installing dependencies...
      - docker info
      - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      - chmod +x ./kubectl
      - mv ./kubectl /usr/local/bin/kubectl
      - aws eks update-kubeconfig --region us-east-1 --name eks-dev-cluster666  # Update kubeconfig   
      - kubectl config current-context 
      - kubectl get nodes
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws --version
      - echo "Configuring AWS CLI"
      - aws configure set aws_access_key_id AKIA2UC3CX7ON4KNN4YV
      - aws configure set aws_secret_access_key 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
      - aws configure set default.region us-east-1
      - AWS_DEFAULT_REGION=us-east-1
      - echo $AWS_DEFAULT_REGION
      - REPOSITORY_URI=730335461340.dkr.ecr.us-east-1.amazonaws.com/iris-ecr-repo
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI

  build:
    commands:
      - echo "Building the Docker image..."
      - docker build -t iris-model:latest .
      - echo "Tagging the Docker image..."
      - docker tag iris-model:latest 730335461340.dkr.ecr.us-east-1.amazonaws.com/ecr-iris-repo:latest
      
  post_build:
    commands:
      - echo "Build completed on `date`"
      - echo "Pushing the Docker image to Amazon ECR..."
      - docker push 730335461340.dkr.ecr.us-east-1.amazonaws.com/ecr-iris-repo:latest
      - echo Deploying to Kubernetes...
      - echo Deploying to Kubernetes...
      - kubectl apply -f deployment.yaml --validate=false  # Deploy the image to EKS
      - kubectl apply -f service.yaml --validate=false # Apply service changes
   
      
artifacts:
  files:
    - '**/*'
